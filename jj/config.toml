"$schema" = "https://jj-vcs.github.io/jj/prerelease/config-schema.json"

[user]
name = "Anton Älgmyr"
email = "anton@algmyr.se"

[git]
colocate = false

[aliases]
pdiff = ["diff", "--from", "@--"]
pstatus = ["pdiff", "-s"]
pst = ["pstatus"]

amend_noprop = ["restore", "--restore-descendants", "--from", "@", "--into", "@-"]
l = ["log", "-r", "default_small", "--no-pager"]
ll = ["log", "-r", "default", "--no-pager"]

mainline = ["rebase", "-A", "closest_pushable(@)"]

# jj_helper utilities
vim = ["util", "exec", "--", "jj_helper", "vim"]
pedit = ["util", "exec", "--", "jj_helper", "pedit"]
conflicted = ["util", "exec", "--", "jj_helper", "conflicted"]
conflicted_plain = ["util", "exec", "--", "jj_helper", "conflicted_plain"]
prefix = ["util", "exec", "--", "jj_helper", "prefix"]
unprefix = ["util", "exec", "--", "jj_helper", "unprefix"]
tug = ["util", "exec", "--", "jj_helper", "tug"]

inject = ["new", "--no-edit"]

[revsets]
short-prefixes = "interesting"

[revset-aliases]
"stack(x, n)" = "ancestors(reachable(x, mutable()), n)"
"stack(x)" = "stack(x, 2)"
"stack()" = "stack(@, 2)"

"furthest(cond, x)" = 'roots(reachable(x, x | ~::(~cond)))'
"furthest(cond)" = 'furthest(cond, @)'
"work" = '''
  ancestors(furthest(description(exact:"") ~ root()), 2)::@ & mutable()
'''

"archived" = 'description("archive: ") ~ immutable()'
"empty_other_wc_on_immutable" = "(working_copies() ~ @) & immutable()+ & empty()"

"flood_log(seeds, domain)" = '''
  @ | trunk() |
  ancestors(
    reachable(seeds, domain) & mutable(),
    2
  )
'''

"interesting" = '''
  flood_log(
    ((mine() & mutable()) ~ archived ~ empty_other_wc_on_immutable) | @,
    mutable(),
  )
'''
"default" = 'interesting'
"closest_immutable(x)" = "furthest(mutable(), x)-"
"default_small" = 'flood_log(@, mutable() | closest_immutable(@))'
# "default_small" = 'ancestors((furthest(mutable())::@):: | @, 2) | trunk()'

working_commits = "@|((description(exact:'')&@)-&mutable())"

'closest_bookmark(to)' = 'heads(::to & bookmarks())'
'_before_megamerge(x)' = '''
  coalesce(::fork_point((merges() & ::x)-), ::x)
'''
'closest_pushable(to)' = '''
  heads(
    ::to
    & ~description(exact:"")
    & (~empty() | merges())
    & _before_megamerge(to)
  )
'''

[template-aliases]
'get_trailer(commit, key)' = '''
  commit.trailers().filter(|t| t.key() == key).map(|t| t.value())
'''

'ellipsize(s, n)' = '''
  if(s.substr(n, 999), s.substr(0, n).substr(0, -1) ++ "…", s)
'''
'shell_summary()' = '''
  separate(' ',
    if(self.contained_in("@") && empty, label('empty', '(empty)')),
    if(
      description,
      label('shell_desc', "[" ++ ellipsize(description.first_line(), 20) ++ "]")
    )
  ) ++ "\n"
'''

[templates]
git_push_bookmark = '"algmyr/push-" ++ change_id.short()'

draft_commit_description = '''
concat(
  coalesce(description, default_commit_description, "\n"),
  surround(
    "\nJJ: This commit contains the following changes:\n", "",
    indent("JJ:     ", diff.stat(72)),
  ),
  "\nJJ: ignore-rest\n",
  diff.git(),
)
'''

[ui]
default-command = "l"
log-word-wrap = true
diff-editor = ":builtin"

[diff.color-words]
conflict = "pair"

[colors]
#"commit_id" = "bright black"
#"working_copy commit_id" = "bright black"
"rest" = "bright black"
"prefix" = { bold = false }

"email" = "yellow"
"username" = "yellow"
"working_copy email" = "bright yellow"
"working_copy username" = "bright yellow"
"timestamp" = "default"
"committer timestamp" = "default"
"working_copy timestamp" = "default"
"line_number" = "bright black"
"content" = "default"

"op_log current_operation" = { bold = true }
"op_log current_operation user" = "bright yellow"
"op_log time"                   = "white"
"op_log current_operation time" = "bright white"
"op_log current_operation description" = { bold = true }

"shell_desc" = "bright blue"
